name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  # SUGAR
  CELERY_FLOWER_USER: debug
  CELERY_FLOWER_PASSWORD: debug
  CELERY_BROKER_URL: redis://localhost:6379/0
  CELERY_FLOWER_PORT: 2555
  DATABASE_URL: postgres://debug:debug@localhost:25432/mhai_web
  DJANGO_SETTINGS_MODULE: config.settings.production
  DJANGO_SECRET_KEY: 1NeLi0lQveM9nZ9bkfoWwRKReojo1FKvtBI6nXSUUvGAMYP4kvXEGLH8snpM52sJ
  DJANGO_ADMIN_URL: Qpqnghk9LNJCAhEnfwb8WZmU030MmIiF/
  DJANGO_ALLOWED_HOSTS: .mhai.com
  DJANGO_SECURE_SSL_REDIRECT: False
  DJANGO_SERVER_EMAIL: test@mymhai.com
  DJANGO_ACCOUNT_ALLOW_REGISTRATION: True
  SENTRY_DSN:
  REDIS_URL: redis://redis:6379/0
  WEB_CONCURRENCY: 4
  SUGAR_GROUP: dev
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 25432
  POSTGRES_DB: mhai_web
  POSTGRES_USER: debug
  POSTGRES_PASSWORD: debug
  USE_DOCKER: yes
  IPYTHONDIR: /app/.ipython

on:
  pull_request:
    branches: ["main"]
    # paths-ignore: ['docs/**']

  push:
    branches: ["master", "main"]
    # paths-ignore: ['docs/**']

jobs:
  check-branch:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: check-pr-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}
  linter:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-linter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Create environment variables files
        run: |
          export HOST_UID=$(id -u)
          export HOST_GID=$(id -g)
          pushd .envs
          envsubst < .env.tpl > .env
          envsubst < .django.tpl > .django
          envsubst < .postgres.tpl > .postgres
          popd

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: mhai-web
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Linter
        run: |
          pre-commit install
          pre-commit run --all-files

  # With no caching at all the entire ci process takes 3m to complete!
  test:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-tests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    env:
      SUGAR_ENV: dev

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: mhai-web
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: |
          poetry check
          poetry config virtualenvs.create false
          poetry install

      - name: Build the Stack
        run: sugar build --all

      # - name: Build the docs
      #   run: docker compose -f docker-compose.docs.yml build docs

      # - name: Check DB Migrations
      #   run: docker compose -f docker-compose.dev.yaml run --rm django python manage.py makemigrations --check

      # - name: Run DB Migrations
      #   run: docker compose -f docker-compose.dev.yaml run --rm django python manage.py migrate

      # - name: Run Django Tests
      #   run: docker compose -f docker-compose.dev.yaml run django pytest

      # - name: Tear down the Stack
      #   run: docker compose -f docker-compose.dev.yaml down
